{"name":"Clam","tagline":"Truly dockerized WordPress","body":"# A truly dockerized WordPress\r\n\r\nA lot of dockerized WordPresses out there clash with the \"docker way\". This is an attempt to set the record straight and\r\nget a nicely done dockerized WordPress off the ground. There's still a long way to, but it will get there, one step at \r\na time. *This is nowhere near production ready*\r\n\r\n**I spend my day job on OSX and my night work on Windows, so this repo will remain OS agnostic.** \r\n\r\n## How it works\r\n\r\nEach plugin is a docker container, built by the image in `images/composer`, allowing for some plugin isolation. You can\r\nfind examples of how to build them in `images/build.all`. Then WordPress itself is in another container, using the \r\nroots/bedrock plugins and folder structure. WordPress is a git subtree from `johnpbloch/wordpress`.\r\n   \r\nThe database is served via `tutum/mysql` and includes replication out of the box. Using the hyperdb plugin from the\r\nwordpress.com folks, reads come from the replicas and writes go to the master. Even if the master were to go down, the\r\nreplicas would still be serving clients.\r\n\r\nLocal development is done using `docker-compose` ...\r\n\r\n## Still to do\r\n\r\n- ~~memcached~~\r\n- varnish\r\n- uploads\r\n- plugins and hooks\r\n- automatic builds\r\n- documentation\r\n- other things I can't remember right now\r\n\r\nIf you want to contribute, you have two options:\r\n\r\n1. Fork the repository and open a pull request\r\n2. Open an issue with bugs you find or feedback\r\n\r\n# Getting started in Windows\r\n\r\nThis will get you set up for development\r\n\r\n1. Get cmdr\r\n1. Get docker toolbox\r\n\r\n## Running it\r\n\r\n``` powershell\r\ndocker-machine create --driver virtualbox --virtualbox-memory=2048 --virtualbox-cpu-count=2 default\r\ndocker-machine.exe env --shell powershell default | Invoke-Expression\r\ndocker-compose up\r\n```\r\n\r\n## Building from source\r\n\r\n``` powershell\r\ndocker-machine create --driver virtualbox --virtualbox-memory=2048 --virtualbox-cpu-count=2 default\r\ndocker-machine.exe env --shell powershell default | Invoke-Expression\r\ndocker build -t clamp/builder images\r\ndocker run -v /var/run/docker.sock:/var/run/docker.sock -v /c/Users/withi/.docker/config.json:/root/.docker/config.json --rm clamp/builder --runs --plugins --cleanup\r\ndocker-compose up\r\n```\r\n\r\n# Getting started in OSX\r\n\r\nThis will get you set up for development\r\n\r\n1. get docker toolbox\r\n\r\nBash:\r\n``` bash\r\ndocker-machine create --driver virtualbox --virtualbox-memory=2048 --virtualbox-cpu-count=2 default\r\neval \"$(docker-machine env --shell bash default)\"\r\n```\r\n\r\nFiSH:\r\n``` fish\r\ndocker-machine create --driver virtualbox --virtualbox-memory=20458 --virtualbox-cpu-count=2 default\r\neval (docker-machine env --shell fish default)\r\n```\r\n\r\n## Running it\r\n\r\n``` bash\r\ndocker-compose up\r\n```\r\n\r\n## Building from source\r\n\r\n``` bash\r\ndocker build -t clamp/builder images\r\ndocker run -v /var/run/docker.sock:/var/run/docker.sock -v ~/.docker/config.json:/root/.docker/config.json --rm clamp/builder  --cleanup\r\ndocker-compose up\r\n```\r\n\r\n# Available builder options\r\n\r\n- `--libs`: Builds all library containers\r\n- `--runs`: Builds all runable containers that provide continuous services, like web servers.\r\n- `--services`: Builds all infrastructure services, these are single run containers that usually are triggered by events\r\n- `--plugins`: Builds a default set of plugins\r\n- `--cleanup`: Runs spotify/docker-gc and removes stale containers and images\r\n- `--push`: Pushes the current version tag (What passes for a release right now)\r\n- `--seq`: Runs builds sequentially instead of in parallel\r\n\r\n# License\r\n\r\nWhile this is available to be read for free, I retain all copywrite. It's like a book in the library, you can borrow it,\r\nbut you can't steal it. Just kidding. It follows the WordPress license: GPLv2","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}